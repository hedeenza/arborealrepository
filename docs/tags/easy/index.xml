<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Easy on The Arboreal Repository</title>
    <link>https://hedeenza.github.io/arborealrepository/tags/easy/</link>
    <description>Recent content in Easy on The Arboreal Repository</description>
    <generator>Hugo</generator>
    <language>en-US</language>
    <lastBuildDate>Sun, 13 Oct 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://hedeenza.github.io/arborealrepository/tags/easy/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>2Warm (picoCTF 42)</title>
      <link>https://hedeenza.github.io/arborealrepository/ctf/2warm-picoctf-42/</link>
      <pubDate>Sun, 13 Oct 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/ctf/2warm-picoctf-42/</guid>
      <description>Challenge Author: SANJAY C / DANNY TUNITIS&#xA;Category: General Skills&#xA;Difficulty: Easy&#xA;Description Can you convert the number 42 (base 10) to binary (base 2)?&#xA;Process / Notes 32 is the largest base 2 number that fits in 42 Then 8, leaving 2 left 32 is 2 to the 5th power, 8 is 2 to the 3rd power, and 2 is 2 to the 1st power So&amp;hellip; 101010 Entered in the flag format and it was correct!</description>
    </item>
    <item>
      <title>Mod 26 (picoCTF 41)</title>
      <link>https://hedeenza.github.io/arborealrepository/ctf/mod-26-picoctf-41/</link>
      <pubDate>Sat, 12 Oct 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/ctf/mod-26-picoctf-41/</guid>
      <description>Challenge Author: PANDU&#xA;Category: Cryptography&#xA;Difficulty: Easy&#xA;Description Cryptography can be easy, but do you know what ROT13 is?&#xA;Process / Notes The flag is encrypted Using Vim&amp;rsquo;s built in rot13 command g?? The flag is revealed! 1 minutes 7 seconds to complete&#xA;Hints Core Lessons Understand rot13 cryptography - letters shifted by 13 positions Know how to use a tool like Vim to automate the rotation rather than doing it manually </description>
    </item>
    <item>
      <title>Obedient Cat (picoCTF 40)</title>
      <link>https://hedeenza.github.io/arborealrepository/ctf/obedient-cat-picoctf-40/</link>
      <pubDate>Fri, 11 Oct 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/ctf/obedient-cat-picoctf-40/</guid>
      <description>Challenge Author: SYREAL&#xA;Category: General Skills&#xA;Difficulty: Easy&#xA;Description This file has a flag in plain sight (aka &amp;lsquo;in-the-clear&amp;rsquo;)&#xA;Process / Notes wget the flag cat the flag file - and it&amp;rsquo;s there! 1 minutes 24 seconds to complete&#xA;Hints Core Lessons Understand how to retrieve a file with wget Understand how to read a file&amp;rsquo;s contents with cat </description>
    </item>
    <item>
      <title>Scavenger Hung (picoCTF 39)</title>
      <link>https://hedeenza.github.io/arborealrepository/ctf/scavenger-hung-picoctf-39/</link>
      <pubDate>Thu, 10 Oct 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/ctf/scavenger-hung-picoctf-39/</guid>
      <description>Challenge Author: MADSTACKS&#xA;Category: Web Exploitation&#xA;Difficulty: Easy&#xA;Description There is some interesting information hidden around this site. Can you find it?&#xA;Process / Notes Open site Two tabs - how and what How = liking the website; what = html, css, JS were used to make the site Examine the source code First part of the flag in some &amp;lt;!-&amp;gt; text toward the bottom Remembering to check the embedded css and JS, will check those at the top Another part of the flag in the css Seemingly nothing of note in the JS Inspector to see about running the JS No wait, the clue is &amp;ldquo;how can I keep google from indexing my website?</description>
    </item>
    <item>
      <title>Static ain&#39;t always noise (picoCTF 38)</title>
      <link>https://hedeenza.github.io/arborealrepository/ctf/static-ain-t-always-noise-picoctf-38/</link>
      <pubDate>Wed, 09 Oct 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/ctf/static-ain-t-always-noise-picoctf-38/</guid>
      <description>Challenge Author: SYREAL&#xA;Category: General Skills&#xA;Difficulty: Easy&#xA;Description Can you look at the data in this binary: static? This BASH script might help!&#xA;Process / Notes wget the items file shows static is also an ELF 64-bit LSB pie executable file shows ltdis.sh is a BASH script cat ltdis.sh Shows the bash script checks for the presence of the binary file and runs objdump -Dj .text to disassemble all of the file, then only print out the &amp;ldquo;.</description>
    </item>
    <item>
      <title>Python Wrangling (picoCTF 37)</title>
      <link>https://hedeenza.github.io/arborealrepository/ctf/python-wrangling-picoctf-37/</link>
      <pubDate>Tue, 08 Oct 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/ctf/python-wrangling-picoctf-37/</guid>
      <description>Challenge Author: SYREAL&#xA;Category: General Skills&#xA;Difficulty: Easy&#xA;Description Python scripts are invoked kind of like programs in the Terminal&amp;hellip; Can you run this Python script using this password to get the flag?&#xA;Process / Notes Running in the web-shell cat ende.py &amp;ndash;&amp;gt; grabbing some system arguments, probably need to grab the pw.txt and flag.txt.en to fill those out Looks like there are specific options for each of our arguments Going to check those with the -h flag after I cat the other two Password is a long mess - looks like hex Flag is really a long encoded mess - glad we have the program Ran python ende.</description>
    </item>
    <item>
      <title>Cookies (picoCTF 36)</title>
      <link>https://hedeenza.github.io/arborealrepository/ctf/cookies-picoctf-36/</link>
      <pubDate>Mon, 07 Oct 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/ctf/cookies-picoctf-36/</guid>
      <description>Challenge Author: MADSTACKS&#xA;Category: Web Exploitation&#xA;Difficulty: Easy&#xA;Description Who doesn&amp;rsquo;t lobe cookies? Try to figure out the best one&#xA;Process / Notes Follow the http link Enter a cookie name? Chocolate chip &amp;ndash;&amp;gt; &amp;ldquo;That is a good cookie! Not very special though&amp;hellip;&amp;rdquo; Check the page source to see if the answer is there Didn&amp;rsquo;t find anything in the source code or nested JavaScript Testing different things At 20:50 in, checking what to do In the inspector, going all the way over to &amp;ldquo;Application&amp;rdquo;, there&amp;rsquo;s a cookies tab under &amp;ldquo;Storage&amp;rdquo; - you can change the value across from name Changing that value and reloading the page will display different cookie names When you enter the value 18 in the box, it prints the flag 10 From the tutorial: &amp;ldquo;It will store info on your computer, then you can alter those values, refresh the page, and it will use those values INSTEAD of the ones it gave you initially.</description>
    </item>
    <item>
      <title>Wave a Flag (picoCTF 35)</title>
      <link>https://hedeenza.github.io/arborealrepository/ctf/wave-a-flag-picoctf-35/</link>
      <pubDate>Sun, 06 Oct 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/ctf/wave-a-flag-picoctf-35/</guid>
      <description>Challenge Author: SYREAL&#xA;Category: General Skills&#xA;Difficulty: Easy&#xA;Description Can you invoke help flags for a tool or binary? This program has extraordinarily helpful information&amp;hellip;&#xA;Process / Notes wget the file cat is gibberish file says its a ELF 64-bit pie executable Maybe it&amp;rsquo;s a command line program? man warm No man page for the warm program we just got the hex dump had the flag, but it looks like you&amp;rsquo;re supposed to run it with the &amp;lsquo;-h&amp;rsquo; flag .</description>
    </item>
    <item>
      <title>Tab, Tab, Attack (picoCTF 34)</title>
      <link>https://hedeenza.github.io/arborealrepository/ctf/tab-tab-attack-picoctf-34/</link>
      <pubDate>Sat, 05 Oct 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/ctf/tab-tab-attack-picoctf-34/</guid>
      <description>Challenge Author: SYREAL&#xA;Category: General Skills&#xA;Difficulty: Easy&#xA;Description Using tab-complete in the Terminal will add years to your life, esp. when dealing with long rambling directory structures and filenames: Addadshashanamu.zip&#xA;Process / Notes wget the zip unzip - definitely long file names tree - only one file path but with long file names Going to use find -name on the final file name then cd to the last directory to save even more time!</description>
    </item>
    <item>
      <title>information (picoCTF 33)</title>
      <link>https://hedeenza.github.io/arborealrepository/ctf/information-picoctf-33/</link>
      <pubDate>Fri, 04 Oct 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/ctf/information-picoctf-33/</guid>
      <description>Challenge Author: SUSIE&#xA;Category: Forensics&#xA;Difficulty: Easy&#xA;Description Files can always be changed in a secret way. Can you find the flag?&#xA;Process / Notes wget the file (cat.jpg) file, cat, strings, hexdump | grep -i &#39;pico&#39; There is a &amp;lsquo;picoCTF&amp;rsquo; line or two in there! exiftool The &amp;lsquo;Current IPTC Digest&amp;rsquo; seems like it may be hex encoded, and &amp;lsquo;License&amp;rsquo; seems like it may be base64 encoded base64 -d the license one and it revealed the flag!</description>
    </item>
    <item>
      <title>Magikarp Ground Mission (picoCTF 32)</title>
      <link>https://hedeenza.github.io/arborealrepository/ctf/magikarp-ground-mission-picoctf-32/</link>
      <pubDate>Thu, 03 Oct 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/ctf/magikarp-ground-mission-picoctf-32/</guid>
      <description>Challenge Author: SYREAL&#xA;Category: General Skills&#xA;Difficulty: Easy&#xA;Description Do you know how to move between directories and read files in the shell?&#xA;Process / Notes Start the challenge instance ssh into the container ls to open the session There&amp;rsquo;s a text file with the beginning of the flag + directions to part 2 of 3 ls -la to check for anything hidden &amp;ndash;&amp;gt; nothing there cat the first part &amp;ndash;&amp;gt; we have the first part of the flag cat the instructions &amp;ndash;&amp;gt; tells us to go to the root directory &amp;lsquo;/&amp;rsquo; In the root, we have part 2 of 3 of the instructions and the second part of the flag cat the instructions &amp;ndash;&amp;gt; tells us to go to the home directory &amp;lsquo;~&amp;rsquo; cd ~ We have the last part of the flag The flag is assembled!</description>
    </item>
    <item>
      <title>convertme.py (picoCTF 31)</title>
      <link>https://hedeenza.github.io/arborealrepository/ctf/convertme-py-picoctf-31/</link>
      <pubDate>Wed, 02 Oct 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/ctf/convertme-py-picoctf-31/</guid>
      <description>Challenge Author: LT &amp;lsquo;SYREAL&amp;rsquo; JONES&#xA;Category: General Skills&#xA;Difficulty: Easy&#xA;Description Run the Python script and convert the given number from decimal to binary to get the flag&#xA;Process / Notes wget the file Based on the script, it looks like you just need to convert the decimal number into binary to get the flag 56 in decimal = 32 + 16 + 8 + 0 + 0 + 0 = 111000 Entered the binary number and the flag was returned 4 minutes 41 seconds to complete</description>
    </item>
    <item>
      <title>fixme1.py (picoCTF 30)</title>
      <link>https://hedeenza.github.io/arborealrepository/ctf/fixme1-py-picoctf-30/</link>
      <pubDate>Tue, 01 Oct 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/ctf/fixme1-py-picoctf-30/</guid>
      <description>Challenge Author: LT &amp;lsquo;SYREAL&amp;rsquo; JONES&#xA;Category: General Skills&#xA;Difficulty: Easy&#xA;Description Fix the syntax error in the Python script to print the flag&#xA;Process / Notes wget the Python script appears to be the same = vs == as before? No it was correct this time Running the script said there was an indentation error - the print statement was indented when it shouldn&amp;rsquo;t have been Fixing it and running again returned the flag 3 minutes 20 seconds to complete</description>
    </item>
    <item>
      <title>fixme2.py (picoCTF 29)</title>
      <link>https://hedeenza.github.io/arborealrepository/ctf/fixme2-py-picoctf-29/</link>
      <pubDate>Mon, 30 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/ctf/fixme2-py-picoctf-29/</guid>
      <description>Challenge Author: LT &amp;lsquo;SYREAL&amp;rsquo; JONES&#xA;Category: General Skills&#xA;Difficulty: Easy&#xA;Description Fix the syntax error in the Python script to print the flag&#xA;Process / Notes wget the script flag encoded in hex, could decode manually but there should be another way In the flag decoding function, the key is set to &amp;rsquo;enkidu&amp;rsquo; - but up avoce new_key it is ste to key, but key is never defined Going to try to set key = &#39;enkidu&#39; below import and above the def str_xor() Realized that wasn&amp;rsquo;t necessary - tried running it in the wb-shell, and the error pointed me to the fact that the flag was flag = (flag_enc, &#39;enkidu&#39;) rather than == like it should have been Making the change and running it The flag is revealed 12 minutes 30 seconds to complete</description>
    </item>
    <item>
      <title>Glitch Cat (picoCTF 28)</title>
      <link>https://hedeenza.github.io/arborealrepository/ctf/glitch-cat-picoctf-28/</link>
      <pubDate>Sun, 29 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/ctf/glitch-cat-picoctf-28/</guid>
      <description>Challenge Author: LT &amp;lsquo;SYREAL&amp;rsquo; JONES&#xA;Category: General Skills&#xA;Difficulty: Easy&#xA;Description Our flag printing services has started glitching!&#xA;Process / Notes nc into the challenge instance Most of the flag was presented Flag will be this decrypted echo &#39;0x62 0x64 0x61 0x36 0x38 0x66 0x37 0x35&#39; | xxd -rp Returns &amp;lsquo;bda68f75&amp;rsquo; Add that to the end of the presented flag and the full thing is revealed! 6 minutes 34 seconds to complete</description>
    </item>
    <item>
      <title>HashingJobApp (picoCTF 27)</title>
      <link>https://hedeenza.github.io/arborealrepository/ctf/hashingjobapp-picoctf-27/</link>
      <pubDate>Sat, 28 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/ctf/hashingjobapp-picoctf-27/</guid>
      <description>Challenge Author: LT &amp;lsquo;SYREAL&amp;rsquo; JONES&#xA;Category: General Skills&#xA;Difficulty: Easy&#xA;Description If you want to hash with the best, beat this test!&#xA;Process / Notes nc into the challenge instance md5 has the provided text &amp;lsquo;cold pizza&amp;rsquo; $echo &#39;cold pizza&#39; | md5sum Why didn&amp;rsquo;t it work? Tried again Looked up the md5sum command and found that you may need to include the &amp;lsquo;-n&amp;rsquo; option on the echo to avoid the encoding of the new line character at the end $echo -n &#39;cold pizza&#39; | md5sum That worked!</description>
    </item>
    <item>
      <title>PW Crack 1 (picoCTF 26)</title>
      <link>https://hedeenza.github.io/arborealrepository/ctf/pw-crack-1-picoctf-26/</link>
      <pubDate>Fri, 27 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/ctf/pw-crack-1-picoctf-26/</guid>
      <description>Challenge Author: LT &amp;lsquo;SYREAL&amp;rsquo; JONES&#xA;Category: General Skills&#xA;Difficulty: Easy&#xA;Description Can you crack the password to get the flag?&#xA;Process / Notes wget the encrypted flag and the checker program cat on both - the flag is encrypted if( user_pw = &amp;quot;691d&amp;quot; ): then provide the flag Input the password, 691d The flag has been revealed! 4 minutes 54 seconds to complete&#xA;Hints To view the file in the web shell, do $ nano level1.</description>
    </item>
    <item>
      <title>PW Crack 2 (picoCTF 25)</title>
      <link>https://hedeenza.github.io/arborealrepository/ctf/pw-crack-2-picoctf-25/</link>
      <pubDate>Thu, 26 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/ctf/pw-crack-2-picoctf-25/</guid>
      <description>Challenge Author: LT &amp;lsquo;SYREAL&amp;rsquo; JONES&#xA;Category: General Skills&#xA;Difficulty: Easy&#xA;Description Can you crack the password to get the flag? Download the password checker here and you&amp;rsquo;ll need the encrypted flag in the same directory too.&#xA;Process / Notes wget the password checker and encrypted flag cat both In the decoder program it looks like if the password id 4 specific Unicode characters, you&amp;rsquo;ll pass and be able to decode the flag The characters are 0x33 0x39 0x63 0x65 Or is this hex?</description>
    </item>
    <item>
      <title>Includes (picoCTF 24)</title>
      <link>https://hedeenza.github.io/arborealrepository/ctf/includes-picoctf-24/</link>
      <pubDate>Wed, 25 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/ctf/includes-picoctf-24/</guid>
      <description>Challenge Author: LT &amp;lsquo;SYREAL&amp;rsquo; JONES&#xA;Category: Web Exploitation&#xA;Difficulty: Easy&#xA;Description Can you get the flag?&#xA;Process / Notes Start the challenge instance Details on the &amp;ldquo;include/copy/import&amp;rdquo; directive that contains a second file inserted into the first file Check the source There&amp;rsquo;s a button to say hello at the bottom Knowing to check the linked files in the source this time, checking the style.css&amp;hellip; That contained half the flag! The script that looks like it gets run when you press the button had a comment containing the other half of the flag.</description>
    </item>
    <item>
      <title>Inspect HTML (picoCTF 23)</title>
      <link>https://hedeenza.github.io/arborealrepository/ctf/inspect-html-picoctf-23/</link>
      <pubDate>Tue, 24 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/ctf/inspect-html-picoctf-23/</guid>
      <description>Challenge Author: LT &amp;lsquo;SYREAL&amp;rsquo; JONES&#xA;Category: Web Exploitation&#xA;Difficulty: Easy&#xA;Description Can you get the flag?&#xA;Process / Notes Launching the web instance &amp;ldquo;On Histiaeus&amp;rdquo; text from Wikipedia Upon inspecting the page source, it&amp;rsquo;s in an HTML comment 2 minutes 44 seconds to complete&#xA;Hints What is the web inspector in web browsers? Core Lessons Understand how to use the web inspector </description>
    </item>
    <item>
      <title>Local Authority (picoCTF 22)</title>
      <link>https://hedeenza.github.io/arborealrepository/ctf/local-authority-picoctf-22/</link>
      <pubDate>Mon, 23 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/ctf/local-authority-picoctf-22/</guid>
      <description>Challenge Author: LT &amp;lsquo;SYREAL&amp;rsquo; JONES&#xA;Category: Web Exploitation&#xA;Difficulty: Easy&#xA;Description Can you get the flag? Go to this website and see what you discover.&#xA;Process / Notes Open the website Looks like a log-in screen &amp;ldquo;Only letters and numbers allowed for username and password&amp;rdquo; Viewing source &amp;ndash;&amp;gt; name = unsername&amp;hellip; name = password Trying that first, but it might be an SQL injection? &amp;rsquo; | 1=1 Detected the &amp;ldquo;illegal character&amp;rdquo; Checked the hint Checked the source code after the failed log in, there&amp;rsquo;s an if statement saying if usernameFilterPassed &amp;amp;&amp;amp; passwordFilterPassed, then it will log you in Maybe try those as the passwords to try to get it to pass that as boolean?</description>
    </item>
    <item>
      <title>First Find (picoCTF 21)</title>
      <link>https://hedeenza.github.io/arborealrepository/ctf/first-find-picoctf-21/</link>
      <pubDate>Sun, 22 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/ctf/first-find-picoctf-21/</guid>
      <description>Challenge Author: LT &amp;lsquo;SYREAL&amp;rsquo; JONES&#xA;Category: General Skills&#xA;Difficulty: Easy&#xA;Description Unzip this archive and find the file names &amp;lsquo;uber-secret.txt&amp;rsquo;&#xA;Process / Notes wget and unzip Saw the file briefly in the unzip Tried to grep it, but wasn&amp;rsquo;t successful even with a recursive grep Sounds like the find command is the way to go find &#39;uber-secret.txt&#39; Wait! I need to add the -name option &amp;ndash;&amp;gt; find -name &#39;uber-secret.txt&#39; Got the file path to the file cat &amp;lt;file/path/uber-secret.</description>
    </item>
    <item>
      <title>Big Zip (picoCTF 20)</title>
      <link>https://hedeenza.github.io/arborealrepository/ctf/big-zip-picoctf-20/</link>
      <pubDate>Sat, 21 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/ctf/big-zip-picoctf-20/</guid>
      <description>Challenge Author: LT &amp;lsquo;SYREAL&amp;rsquo; JONES&#xA;Category: General Skills&#xA;Difficulty: Easy&#xA;Description Unzip this archive and find the flag&#xA;Process / Notes wget and unzip TONS of folders and sub-folders - a big zip indeed Looks like a recursive grep is the solution! grep -r &#39;pico&#39; Returned a long, very buried file, a brief message, and the flag 3 minutes 27 seconds to complete&#xA;Hints Can grep be instructed to look at every file in the directory and its subdirectories?</description>
    </item>
    <item>
      <title>picoCTF Easy Challenges Complete</title>
      <link>https://hedeenza.github.io/arborealrepository/2024/09/20/picoctf-easy-challenges-complete/</link>
      <pubDate>Fri, 20 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/2024/09/20/picoctf-easy-challenges-complete/</guid>
      <description>Easy Challenges I&amp;rsquo;ve just completed the last of the &amp;rsquo;easy&amp;rsquo; challenges in the picoCTF practice gym. It&amp;rsquo;s been a very educational and fun experience so far. While it&amp;rsquo;s unclear how much more difficult the &amp;lsquo;medium&amp;rsquo; challenges will be, the skills I&amp;rsquo;ve learned so far in the easy challenges should serve as a good foundation for how they think and structure the solutions. Web Exploitation and Reverse Engineering seem to be the most challenging right now.</description>
    </item>
    <item>
      <title>Bookmarklet (picoCTF 14)</title>
      <link>https://hedeenza.github.io/arborealrepository/ctf/bookmarklet/</link>
      <pubDate>Sun, 15 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/ctf/bookmarklet/</guid>
      <description>Challenge Author: Jeffery John&#xA;Difficulty: Easy&#xA;Description Why search for the flag when I can make a bookmarklet to print it for me?&#xA;Process / Notes Follow the link to the http site There&amp;rsquo;s a JavaScript function with an encrypted flag Viewing the page source There&amp;rsquo;s a line that looks like it responds to copying the code to one&amp;rsquo;s clipboard Tried moving the JavaScript line into the &amp;lt;scirpt&amp;gt;&amp;lt;/scirpt&amp;gt; section and that didn&amp;rsquo;t seem to work At 15 minutes, checking how to do this It looks like you paste the JavaScript into the &amp;ldquo;console&amp;rdquo; part of the Inspector!</description>
    </item>
  </channel>
</rss>
