<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>The Arboreal Repository</title>
    <link>https://hedeenza.github.io/arborealrepository/</link>
    <description>Recent content on The Arboreal Repository</description>
    <generator>Hugo</generator>
    <language>en-US</language>
    <lastBuildDate>Fri, 11 Oct 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://hedeenza.github.io/arborealrepository/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Obedient Cat (picoCTF 40)</title>
      <link>https://hedeenza.github.io/arborealrepository/ctf/obedient-cat-picoctf-40/</link>
      <pubDate>Fri, 11 Oct 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/ctf/obedient-cat-picoctf-40/</guid>
      <description>Challenge Author: SYREAL&#xA;Category: General Skills&#xA;Difficulty: Easy&#xA;Description This file has a flag in plain sight (aka &amp;lsquo;in-the-clear&amp;rsquo;)&#xA;Process / Notes wget the flag cat the flag file - and it&amp;rsquo;s there! 1 minutes 24 seconds to complete&#xA;Hints Core Lessons Understand how to retrieve a file with wget Understand how to read a file&amp;rsquo;s contents with cat </description>
    </item>
    <item>
      <title>Scavenger Hung (picoCTF 39)</title>
      <link>https://hedeenza.github.io/arborealrepository/ctf/scavenger-hung-picoctf-39/</link>
      <pubDate>Thu, 10 Oct 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/ctf/scavenger-hung-picoctf-39/</guid>
      <description>Challenge Author: MADSTACKS&#xA;Category: Web Exploitation&#xA;Difficulty: Easy&#xA;Description There is some interesting information hidden around this site. Can you find it?&#xA;Process / Notes Open site Two tabs - how and what How = liking the website; what = html, css, JS were used to make the site Examine the source code First part of the flag in some &amp;lt;!-&amp;gt; text toward the bottom Remembering to check the embedded css and JS, will check those at the top Another part of the flag in the css Seemingly nothing of note in the JS Inspector to see about running the JS No wait, the clue is &amp;ldquo;how can I keep google from indexing my website?</description>
    </item>
    <item>
      <title>It&#39;s A Marathon</title>
      <link>https://hedeenza.github.io/arborealrepository/2024/10/09/it-s-a-marathon/</link>
      <pubDate>Wed, 09 Oct 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/2024/10/09/it-s-a-marathon/</guid>
      <description>A Reminder While it feels like there&amp;rsquo;s a lot of time pressure to learn everything as fast as humanly possible, I need to remember that this is going to be a marathon. Basics can be learned quickly, but the knowledge base for this material is vast. It&amp;rsquo;s going to take a long time. Burning out is going to be the biggest obstacle to getting where I want to be - and that&amp;rsquo;s what I can&amp;rsquo;t afford.</description>
    </item>
    <item>
      <title>Static ain&#39;t always noise (picoCTF 38)</title>
      <link>https://hedeenza.github.io/arborealrepository/ctf/static-ain-t-always-noise-picoctf-38/</link>
      <pubDate>Wed, 09 Oct 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/ctf/static-ain-t-always-noise-picoctf-38/</guid>
      <description>Challenge Author: SYREAL&#xA;Category: General Skills&#xA;Difficulty: Easy&#xA;Description Can you look at the data in this binary: static? This BASH script might help!&#xA;Process / Notes wget the items file shows static is also an ELF 64-bit LSB pie executable file shows ltdis.sh is a BASH script cat ltdis.sh Shows the bash script checks for the presence of the binary file and runs objdump -Dj .text to disassemble all of the file, then only print out the &amp;ldquo;.</description>
    </item>
    <item>
      <title>Python Wrangling (picoCTF 37)</title>
      <link>https://hedeenza.github.io/arborealrepository/ctf/python-wrangling-picoctf-37/</link>
      <pubDate>Tue, 08 Oct 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/ctf/python-wrangling-picoctf-37/</guid>
      <description>Challenge Author: SYREAL&#xA;Category: General Skills&#xA;Difficulty: Easy&#xA;Description Python scripts are invoked kind of like programs in the Terminal&amp;hellip; Can you run this Python script using this password to get the flag?&#xA;Process / Notes Running in the web-shell cat ende.py &amp;ndash;&amp;gt; grabbing some system arguments, probably need to grab the pw.txt and flag.txt.en to fill those out Looks like there are specific options for each of our arguments Going to check those with the -h flag after I cat the other two Password is a long mess - looks like hex Flag is really a long encoded mess - glad we have the program Ran python ende.</description>
    </item>
    <item>
      <title>Cookies (picoCTF 36)</title>
      <link>https://hedeenza.github.io/arborealrepository/ctf/cookies-picoctf-36/</link>
      <pubDate>Mon, 07 Oct 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/ctf/cookies-picoctf-36/</guid>
      <description>Challenge Author: MADSTACKS&#xA;Category: Web Exploitation&#xA;Difficulty: Easy&#xA;Description Who doesn&amp;rsquo;t lobe cookies? Try to figure out the best one&#xA;Process / Notes Follow the http link Enter a cookie name? Chocolate chip &amp;ndash;&amp;gt; &amp;ldquo;That is a good cookie! Not very special though&amp;hellip;&amp;rdquo; Check the page source to see if the answer is there Didn&amp;rsquo;t find anything in the source code or nested JavaScript Testing different things At 20:50 in, checking what to do In the inspector, going all the way over to &amp;ldquo;Application&amp;rdquo;, there&amp;rsquo;s a cookies tab under &amp;ldquo;Storage&amp;rdquo; - you can change the value across from name Changing that value and reloading the page will display different cookie names When you enter the value 18 in the box, it prints the flag 10 From the tutorial: &amp;ldquo;It will store info on your computer, then you can alter those values, refresh the page, and it will use those values INSTEAD of the ones it gave you initially.</description>
    </item>
    <item>
      <title>Wave a Flag (picoCTF 35)</title>
      <link>https://hedeenza.github.io/arborealrepository/ctf/wave-a-flag-picoctf-35/</link>
      <pubDate>Sun, 06 Oct 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/ctf/wave-a-flag-picoctf-35/</guid>
      <description>Challenge Author: SYREAL&#xA;Category: General Skills&#xA;Difficulty: Easy&#xA;Description Can you invoke help flags for a tool or binary? This program has extraordinarily helpful information&amp;hellip;&#xA;Process / Notes wget the file cat is gibberish file says its a ELF 64-bit pie executable Maybe it&amp;rsquo;s a command line program? man warm No man page for the warm program we just got the hex dump had the flag, but it looks like you&amp;rsquo;re supposed to run it with the &amp;lsquo;-h&amp;rsquo; flag .</description>
    </item>
    <item>
      <title>Tab, Tab, Attack (picoCTF 34)</title>
      <link>https://hedeenza.github.io/arborealrepository/ctf/tab-tab-attack-picoctf-34/</link>
      <pubDate>Sat, 05 Oct 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/ctf/tab-tab-attack-picoctf-34/</guid>
      <description>Challenge Author: SYREAL&#xA;Category: General Skills&#xA;Difficulty: Easy&#xA;Description Using tab-complete in the Terminal will add years to your life, esp. when dealing with long rambling directory structures and filenames: Addadshashanamu.zip&#xA;Process / Notes wget the zip unzip - definitely long file names tree - only one file path but with long file names Going to use find -name on the final file name then cd to the last directory to save even more time!</description>
    </item>
    <item>
      <title>The Puzzle Paradox</title>
      <link>https://hedeenza.github.io/arborealrepository/2024/10/05/the-puzzle-paradox/</link>
      <pubDate>Sat, 05 Oct 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/2024/10/05/the-puzzle-paradox/</guid>
      <description>Reflecting on Challenges After doing so many challenges from pwn.college and picoCTF, I&amp;rsquo;ve had some thoughts about the enjoyment of puzzles. This is certainly a great oversimplifications, but there are the types of people that just like having the solution and don&amp;rsquo;t care much for the puzzle. Whether it&amp;rsquo;s out of a lack of tolerance for frustration or lack of patience or just preference for the rush of coming upon the solution, there are some people who just want to complete the task.</description>
    </item>
    <item>
      <title>information (picoCTF 33)</title>
      <link>https://hedeenza.github.io/arborealrepository/ctf/information-picoctf-33/</link>
      <pubDate>Fri, 04 Oct 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/ctf/information-picoctf-33/</guid>
      <description>Challenge Author: SUSIE&#xA;Category: Forensics&#xA;Difficulty: Easy&#xA;Description Files can always be changed in a secret way. Can you find the flag?&#xA;Process / Notes wget the file (cat.jpg) file, cat, strings, hexdump | grep -i &#39;pico&#39; There is a &amp;lsquo;picoCTF&amp;rsquo; line or two in there! exiftool The &amp;lsquo;Current IPTC Digest&amp;rsquo; seems like it may be hex encoded, and &amp;lsquo;License&amp;rsquo; seems like it may be base64 encoded base64 -d the license one and it revealed the flag!</description>
    </item>
    <item>
      <title>Magikarp Ground Mission (picoCTF 32)</title>
      <link>https://hedeenza.github.io/arborealrepository/ctf/magikarp-ground-mission-picoctf-32/</link>
      <pubDate>Thu, 03 Oct 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/ctf/magikarp-ground-mission-picoctf-32/</guid>
      <description>Challenge Author: SYREAL&#xA;Category: General Skills&#xA;Difficulty: Easy&#xA;Description Do you know how to move between directories and read files in the shell?&#xA;Process / Notes Start the challenge instance ssh into the container ls to open the session There&amp;rsquo;s a text file with the beginning of the flag + directions to part 2 of 3 ls -la to check for anything hidden &amp;ndash;&amp;gt; nothing there cat the first part &amp;ndash;&amp;gt; we have the first part of the flag cat the instructions &amp;ndash;&amp;gt; tells us to go to the root directory &amp;lsquo;/&amp;rsquo; In the root, we have part 2 of 3 of the instructions and the second part of the flag cat the instructions &amp;ndash;&amp;gt; tells us to go to the home directory &amp;lsquo;~&amp;rsquo; cd ~ We have the last part of the flag The flag is assembled!</description>
    </item>
    <item>
      <title>convertme.py (picoCTF 31)</title>
      <link>https://hedeenza.github.io/arborealrepository/ctf/convertme-py-picoctf-31/</link>
      <pubDate>Wed, 02 Oct 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/ctf/convertme-py-picoctf-31/</guid>
      <description>Challenge Author: LT &amp;lsquo;SYREAL&amp;rsquo; JONES&#xA;Category: General Skills&#xA;Difficulty: Easy&#xA;Description Run the Python script and convert the given number from decimal to binary to get the flag&#xA;Process / Notes wget the file Based on the script, it looks like you just need to convert the decimal number into binary to get the flag 56 in decimal = 32 + 16 + 8 + 0 + 0 + 0 = 111000 Entered the binary number and the flag was returned 4 minutes 41 seconds to complete</description>
    </item>
    <item>
      <title>Healthy Housing: Quality, Safety, Accessibility (Open Data Syracuse pt. 2)</title>
      <link>https://hedeenza.github.io/arborealrepository/2024/10/02/healthy-housing-quality-safety-accessibility-open-data-syracuse-pt-2/</link>
      <pubDate>Wed, 02 Oct 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/2024/10/02/healthy-housing-quality-safety-accessibility-open-data-syracuse-pt-2/</guid>
      <description>The Topic The topic for the Syracuse Open Data challenge has been announced. This round the theme will be &amp;ldquo;Healthy Housing: Quality, Safety, Accessibility.&amp;rdquo; They&amp;rsquo;re listed relevant Open Data Syracuse data sets:&#xA;Syracuse Rental Registry Code Violations Vacant Properties Permit Requests Assessment Final Tax Roll 2024 Syracuse Parcel Map 2027 As well as some potentially useful sources for additional data sets:&#xA;NYS Unified Court System- Statewide Landlord Tenant Eviction Dashboard CNY Vitals Pro (Source of data and visualizations for CNY Neighborhood topics) Zillow Real Estate Housing data and API&amp;rsquo;s Apartmentes.</description>
    </item>
    <item>
      <title>fixme1.py (picoCTF 30)</title>
      <link>https://hedeenza.github.io/arborealrepository/ctf/fixme1-py-picoctf-30/</link>
      <pubDate>Tue, 01 Oct 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/ctf/fixme1-py-picoctf-30/</guid>
      <description>Challenge Author: LT &amp;lsquo;SYREAL&amp;rsquo; JONES&#xA;Category: General Skills&#xA;Difficulty: Easy&#xA;Description Fix the syntax error in the Python script to print the flag&#xA;Process / Notes wget the Python script appears to be the same = vs == as before? No it was correct this time Running the script said there was an indentation error - the print statement was indented when it shouldn&amp;rsquo;t have been Fixing it and running again returned the flag 3 minutes 20 seconds to complete</description>
    </item>
    <item>
      <title>fixme2.py (picoCTF 29)</title>
      <link>https://hedeenza.github.io/arborealrepository/ctf/fixme2-py-picoctf-29/</link>
      <pubDate>Mon, 30 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/ctf/fixme2-py-picoctf-29/</guid>
      <description>Challenge Author: LT &amp;lsquo;SYREAL&amp;rsquo; JONES&#xA;Category: General Skills&#xA;Difficulty: Easy&#xA;Description Fix the syntax error in the Python script to print the flag&#xA;Process / Notes wget the script flag encoded in hex, could decode manually but there should be another way In the flag decoding function, the key is set to &amp;rsquo;enkidu&amp;rsquo; - but up avoce new_key it is ste to key, but key is never defined Going to try to set key = &#39;enkidu&#39; below import and above the def str_xor() Realized that wasn&amp;rsquo;t necessary - tried running it in the wb-shell, and the error pointed me to the fact that the flag was flag = (flag_enc, &#39;enkidu&#39;) rather than == like it should have been Making the change and running it The flag is revealed 12 minutes 30 seconds to complete</description>
    </item>
    <item>
      <title>R Flex Dashboards</title>
      <link>https://hedeenza.github.io/arborealrepository/notes/r-flex-dashboards/</link>
      <pubDate>Mon, 30 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/notes/r-flex-dashboards/</guid>
      <description>Intro Creating &amp;ldquo;Dashboards&amp;rdquo; can be important when communicating insights from data to non-technical audiences. There are platforms like PowerBI and Tableau that can be utilized for data visualization, but there are ways - as far as I&amp;rsquo;m aware - to do just about everything you can do in those programs in R and R Studio. These are my notes on how to create a Flex Dashboard in R. Here are the links to the first and second video by the channel &amp;lsquo;CradleToGraveR&amp;rsquo; on YouTube.</description>
    </item>
    <item>
      <title>A Light Roadblock</title>
      <link>https://hedeenza.github.io/arborealrepository/2024/09/29/a-light-roadblock/</link>
      <pubDate>Sun, 29 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/2024/09/29/a-light-roadblock/</guid>
      <description>Good Problems? At the current point in the journey, I have hit a bit of a road block. Some of the skills to advance in pwn.college and picoCTF require knowledge of C. While I can read very basic C most of the way due to my experience with other languages, I cannot write it without reference. In order to progress further on both fronts I&amp;rsquo;ll need to spend some time focusing on learning C until such a time I don&amp;rsquo;t have to look every single thing up.</description>
    </item>
    <item>
      <title>Glitch Cat (picoCTF 28)</title>
      <link>https://hedeenza.github.io/arborealrepository/ctf/glitch-cat-picoctf-28/</link>
      <pubDate>Sun, 29 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/ctf/glitch-cat-picoctf-28/</guid>
      <description>Challenge Author: LT &amp;lsquo;SYREAL&amp;rsquo; JONES&#xA;Category: General Skills&#xA;Difficulty: Easy&#xA;Description Our flag printing services has started glitching!&#xA;Process / Notes nc into the challenge instance Most of the flag was presented Flag will be this decrypted echo &#39;0x62 0x64 0x61 0x36 0x38 0x66 0x37 0x35&#39; | xxd -rp Returns &amp;lsquo;bda68f75&amp;rsquo; Add that to the end of the presented flag and the full thing is revealed! 6 minutes 34 seconds to complete</description>
    </item>
    <item>
      <title>Core Values Activity</title>
      <link>https://hedeenza.github.io/arborealrepository/projects/core-values-activity/</link>
      <pubDate>Sat, 28 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/projects/core-values-activity/</guid>
      <description>Repost of my Core Values Activity - originally posted on 2024-06-16&#xA;1. Core Values and Core Principles Activity Guide Core Values Activity Tracks Part 1. Core Values Journey (~50 minutes) Part 2. Core Values Circle (For Teams) Introduction Regrouping Initial Picks - 20 Chosen Throw Everything on the Board Grouping The Method: Revise, Combine, Delete The Journey Grouping 1st Toll Round 1 2nd Toll Round 2 3rd Toll Round 3 4th Toll Round 4 5th Toll Round 5 Final Toll 2.</description>
    </item>
    <item>
      <title>HashingJobApp (picoCTF 27)</title>
      <link>https://hedeenza.github.io/arborealrepository/ctf/hashingjobapp-picoctf-27/</link>
      <pubDate>Sat, 28 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/ctf/hashingjobapp-picoctf-27/</guid>
      <description>Challenge Author: LT &amp;lsquo;SYREAL&amp;rsquo; JONES&#xA;Category: General Skills&#xA;Difficulty: Easy&#xA;Description If you want to hash with the best, beat this test!&#xA;Process / Notes nc into the challenge instance md5 has the provided text &amp;lsquo;cold pizza&amp;rsquo; $echo &#39;cold pizza&#39; | md5sum Why didn&amp;rsquo;t it work? Tried again Looked up the md5sum command and found that you may need to include the &amp;lsquo;-n&amp;rsquo; option on the echo to avoid the encoding of the new line character at the end $echo -n &#39;cold pizza&#39; | md5sum That worked!</description>
    </item>
    <item>
      <title>State of the Tea Collection</title>
      <link>https://hedeenza.github.io/arborealrepository/2024/09/28/state-of-the-tea-collection/</link>
      <pubDate>Sat, 28 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/2024/09/28/state-of-the-tea-collection/</guid>
      <description>Number of Teas: 64 Total Tea Mass (g): 4,445 By Category By Category&#xD;Type Count Oolong 37 Pu&#39;ehr 8 White 8 Black 7 Green 2 Heicha 2 By Category&#xD;Type % White 33.7 Oolong 30.0 Pu&#39;ehr 25.7 Heicha 4.9 Green 2.9 Black 2.8 By Distributor By Distributor&#xD;Distributor Count Old Ways Tea 33 Mei Leaf 13 Yunnan Sourcing 9 Taiwan Sourcing 5 King Tea Mall 3 J Tea 1 By Distributor&#xD;Distributor Count Yunnan Sourcing 35.</description>
    </item>
    <item>
      <title>PW Crack 1 (picoCTF 26)</title>
      <link>https://hedeenza.github.io/arborealrepository/ctf/pw-crack-1-picoctf-26/</link>
      <pubDate>Fri, 27 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/ctf/pw-crack-1-picoctf-26/</guid>
      <description>Challenge Author: LT &amp;lsquo;SYREAL&amp;rsquo; JONES&#xA;Category: General Skills&#xA;Difficulty: Easy&#xA;Description Can you crack the password to get the flag?&#xA;Process / Notes wget the encrypted flag and the checker program cat on both - the flag is encrypted if( user_pw = &amp;quot;691d&amp;quot; ): then provide the flag Input the password, 691d The flag has been revealed! 4 minutes 54 seconds to complete&#xA;Hints To view the file in the web shell, do $ nano level1.</description>
    </item>
    <item>
      <title>Progress Update pwn.college</title>
      <link>https://hedeenza.github.io/arborealrepository/2024/09/26/progress-update-pwn-college/</link>
      <pubDate>Thu, 26 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/2024/09/26/progress-update-pwn-college/</guid>
      <description>Faster Than Expected I&amp;rsquo;ve been going a little faster than expected - probably because I&amp;rsquo;ve been more time than originally planned - through pwn.college. Linux Luminarium got finished on 2024-09-19, 7 days sooner than the 10 challenges/day rate I had on my original table, and it seems like Optional Refreshers will also be finished ahead of even the fastest timeline. It&amp;rsquo;s been too much fun and I&amp;rsquo;ve been learning too much to want to put it down.</description>
    </item>
    <item>
      <title>PW Crack 2 (picoCTF 25)</title>
      <link>https://hedeenza.github.io/arborealrepository/ctf/pw-crack-2-picoctf-25/</link>
      <pubDate>Thu, 26 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/ctf/pw-crack-2-picoctf-25/</guid>
      <description>Challenge Author: LT &amp;lsquo;SYREAL&amp;rsquo; JONES&#xA;Category: General Skills&#xA;Difficulty: Easy&#xA;Description Can you crack the password to get the flag? Download the password checker here and you&amp;rsquo;ll need the encrypted flag in the same directory too.&#xA;Process / Notes wget the password checker and encrypted flag cat both In the decoder program it looks like if the password id 4 specific Unicode characters, you&amp;rsquo;ll pass and be able to decode the flag The characters are 0x33 0x39 0x63 0x65 Or is this hex?</description>
    </item>
    <item>
      <title>Includes (picoCTF 24)</title>
      <link>https://hedeenza.github.io/arborealrepository/ctf/includes-picoctf-24/</link>
      <pubDate>Wed, 25 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/ctf/includes-picoctf-24/</guid>
      <description>Challenge Author: LT &amp;lsquo;SYREAL&amp;rsquo; JONES&#xA;Category: Web Exploitation&#xA;Difficulty: Easy&#xA;Description Can you get the flag?&#xA;Process / Notes Start the challenge instance Details on the &amp;ldquo;include/copy/import&amp;rdquo; directive that contains a second file inserted into the first file Check the source There&amp;rsquo;s a button to say hello at the bottom Knowing to check the linked files in the source this time, checking the style.css&amp;hellip; That contained half the flag! The script that looks like it gets run when you press the button had a comment containing the other half of the flag.</description>
    </item>
    <item>
      <title>Inspect HTML (picoCTF 23)</title>
      <link>https://hedeenza.github.io/arborealrepository/ctf/inspect-html-picoctf-23/</link>
      <pubDate>Tue, 24 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/ctf/inspect-html-picoctf-23/</guid>
      <description>Challenge Author: LT &amp;lsquo;SYREAL&amp;rsquo; JONES&#xA;Category: Web Exploitation&#xA;Difficulty: Easy&#xA;Description Can you get the flag?&#xA;Process / Notes Launching the web instance &amp;ldquo;On Histiaeus&amp;rdquo; text from Wikipedia Upon inspecting the page source, it&amp;rsquo;s in an HTML comment 2 minutes 44 seconds to complete&#xA;Hints What is the web inspector in web browsers? Core Lessons Understand how to use the web inspector </description>
    </item>
    <item>
      <title>Local Authority (picoCTF 22)</title>
      <link>https://hedeenza.github.io/arborealrepository/ctf/local-authority-picoctf-22/</link>
      <pubDate>Mon, 23 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/ctf/local-authority-picoctf-22/</guid>
      <description>Challenge Author: LT &amp;lsquo;SYREAL&amp;rsquo; JONES&#xA;Category: Web Exploitation&#xA;Difficulty: Easy&#xA;Description Can you get the flag? Go to this website and see what you discover.&#xA;Process / Notes Open the website Looks like a log-in screen &amp;ldquo;Only letters and numbers allowed for username and password&amp;rdquo; Viewing source &amp;ndash;&amp;gt; name = unsername&amp;hellip; name = password Trying that first, but it might be an SQL injection? &amp;rsquo; | 1=1 Detected the &amp;ldquo;illegal character&amp;rdquo; Checked the hint Checked the source code after the failed log in, there&amp;rsquo;s an if statement saying if usernameFilterPassed &amp;amp;&amp;amp; passwordFilterPassed, then it will log you in Maybe try those as the passwords to try to get it to pass that as boolean?</description>
    </item>
    <item>
      <title>picoCTF Medium Challenges</title>
      <link>https://hedeenza.github.io/arborealrepository/2024/09/23/picoctf-medium-challenges/</link>
      <pubDate>Mon, 23 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/2024/09/23/picoctf-medium-challenges/</guid>
      <description>A Step Up I&amp;rsquo;ve completed a couple of the medium-graded picoCTF challenges so far, and it&amp;rsquo;s a noticeable step up in difficulty. Perhaps it was due to my first attempt being in my weakest category, but the knowledge base required for this level of challenge seems to be slightly beyond where I am. After switching to the &amp;lsquo;General Skills&amp;rsquo; category I had a bit better luck, but was definitely pushed harder than I was by several of the last easy challenges.</description>
    </item>
    <item>
      <title>First Find (picoCTF 21)</title>
      <link>https://hedeenza.github.io/arborealrepository/ctf/first-find-picoctf-21/</link>
      <pubDate>Sun, 22 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/ctf/first-find-picoctf-21/</guid>
      <description>Challenge Author: LT &amp;lsquo;SYREAL&amp;rsquo; JONES&#xA;Category: General Skills&#xA;Difficulty: Easy&#xA;Description Unzip this archive and find the file names &amp;lsquo;uber-secret.txt&amp;rsquo;&#xA;Process / Notes wget and unzip Saw the file briefly in the unzip Tried to grep it, but wasn&amp;rsquo;t successful even with a recursive grep Sounds like the find command is the way to go find &#39;uber-secret.txt&#39; Wait! I need to add the -name option &amp;ndash;&amp;gt; find -name &#39;uber-secret.txt&#39; Got the file path to the file cat &amp;lt;file/path/uber-secret.</description>
    </item>
    <item>
      <title>ASCII Conversion Tool</title>
      <link>https://hedeenza.github.io/arborealrepository/projects/ascii-conversion-tool/</link>
      <pubDate>Sat, 21 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/projects/ascii-conversion-tool/</guid>
      <description>Nicety Over Necessity Many of the CTF challenges have required some sort of conversion of Ordinal Position, Decimal, Octal, Hexadecimal, or Binary into regular characters to either submit as a final result or be used to determine what to do next. There are online tools to do this type of thing, but I wanted to have the ability to do this offline too. With this Python tool, I can now select a translation method by typing the three letters within the parentheses - e.</description>
    </item>
    <item>
      <title>Big Zip (picoCTF 20)</title>
      <link>https://hedeenza.github.io/arborealrepository/ctf/big-zip-picoctf-20/</link>
      <pubDate>Sat, 21 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/ctf/big-zip-picoctf-20/</guid>
      <description>Challenge Author: LT &amp;lsquo;SYREAL&amp;rsquo; JONES&#xA;Category: General Skills&#xA;Difficulty: Easy&#xA;Description Unzip this archive and find the flag&#xA;Process / Notes wget and unzip TONS of folders and sub-folders - a big zip indeed Looks like a recursive grep is the solution! grep -r &#39;pico&#39; Returned a long, very buried file, a brief message, and the flag 3 minutes 27 seconds to complete&#xA;Hints Can grep be instructed to look at every file in the directory and its subdirectories?</description>
    </item>
    <item>
      <title>picoCTF Easy Challenges Complete</title>
      <link>https://hedeenza.github.io/arborealrepository/2024/09/20/picoctf-easy-challenges-complete/</link>
      <pubDate>Fri, 20 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/2024/09/20/picoctf-easy-challenges-complete/</guid>
      <description>Easy Challenges I&amp;rsquo;ve just completed the last of the &amp;rsquo;easy&amp;rsquo; challenges in the picoCTF practice gym. It&amp;rsquo;s been a very educational and fun experience so far. While it&amp;rsquo;s unclear how much more difficult the &amp;lsquo;medium&amp;rsquo; challenges will be, the skills I&amp;rsquo;ve learned so far in the easy challenges should serve as a good foundation for how they think and structure the solutions. Web Exploitation and Reverse Engineering seem to be the most challenging right now.</description>
    </item>
    <item>
      <title>repetitions (picoCTF 19)</title>
      <link>https://hedeenza.github.io/arborealrepository/ctf/repetitions-picoctf19/</link>
      <pubDate>Fri, 20 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/ctf/repetitions-picoctf19/</guid>
      <description>Challenge Author: THEONESTE BYAGUTANGAZA&#xA;Category: General Skills&#xA;Difficulty: Easy&#xA;Description Can you make sense of this file?&#xA;Process / Notes wget the file file enc_flag - ASCII text strings enc_flag - almost looks like an ssh key One of the tags is &amp;lsquo;base64&amp;rsquo;, pipe this into base64 -d Twice? Let&amp;rsquo;s skip to 4 times 6 Times!!! Got the flag 4 minutes 27 seconds to complete&#xA;Hints Multiple decoding is always good Core Lessons Recognizing base64 text Understanding the need to repeat decoding processes multiple times if it seems appropriate </description>
    </item>
    <item>
      <title>binhexa (picoCTF 18)</title>
      <link>https://hedeenza.github.io/arborealrepository/ctf/binhexa-picoctf-18/</link>
      <pubDate>Thu, 19 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/ctf/binhexa-picoctf-18/</guid>
      <description>Challenge Author: NANA ATOMBO-SACKEY&#xA;Difficulty: Easy&#xA;Description How well can you perform basic binary operations?&#xA;Process / Notes nc into the challenge Perform math on binary numbers Binary Number 1 = 10010111 Binary Number 2 = 11100000 Operation = + Add right to left, anything that adds to 2 gets carried over as a 1 to the left &amp;gt; 101110111 Operation = &amp;laquo; on BN1 Shifting everything to the left by 1 &amp;gt; 1011101110 (added a 0 to the end) Operation = &amp;raquo; on BN2 Shift everything to the right by 1 bit &amp;gt; 011100000 was incorrect &amp;gt; 11000 was correct!</description>
    </item>
    <item>
      <title>Linux Luminarium (pwn.college)</title>
      <link>https://hedeenza.github.io/arborealrepository/notes/linux-luminarium-pwn-college/</link>
      <pubDate>Thu, 19 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/notes/linux-luminarium-pwn-college/</guid>
      <description>Linux Luminarium As agreed, I would not be doing any write-ups for pwn.college because that&amp;rsquo;s against the ground rules for their generously offered free educational material. That being said, I do want to keep record of the core skills I&amp;rsquo;ve gained through each section of their course in such a way that the notes won&amp;rsquo;t take away from the challenges - because it&amp;rsquo;s in the struggling that learning really happens.</description>
    </item>
    <item>
      <title>Time Machine (picoCTF 17)</title>
      <link>https://hedeenza.github.io/arborealrepository/ctf/time-machine-picoctf-17/</link>
      <pubDate>Wed, 18 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/ctf/time-machine-picoctf-17/</guid>
      <description>Challenge Author:&#xA;Difficulty: Easy&#xA;Description What was I last working on? I remember writing a note to help me remember&amp;hellip;&#xA;Process / Notes wget and unzip the challenge folder - a lot of files got unzipped from a .git directory cat message.txt - &amp;ldquo;This is what I was working on, but I&amp;rsquo;d need to look at my commit history to know why&amp;hellip;&amp;rdquo; Checking the tree inside the .git directory There&amp;rsquo;s a COMMIT_MSG cat COMMIT_MSG revealed the flag!</description>
    </item>
    <item>
      <title>Unminify (picoCTF 16)</title>
      <link>https://hedeenza.github.io/arborealrepository/ctf/unminify-picoctf-16/</link>
      <pubDate>Tue, 17 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/ctf/unminify-picoctf-16/</guid>
      <description>Challenge Author:&#xA;Difficulty: Easy&#xA;Description I don&amp;rsquo;t like scrolling down to read the code of my website, so I&amp;rsquo;ve squished it. As a bonus, my pages load faster!&#xA;Process / Notes Go to the listed site It&amp;rsquo;s telling us we have the flag, but they just deliver them , they don&amp;rsquo;t know how to read them &amp;lt;C-u&amp;gt; to see what&amp;rsquo;s going on It&amp;rsquo;s all in one line. Is this the minification?</description>
    </item>
    <item>
      <title>Blame Game (picoCTF 15)</title>
      <link>https://hedeenza.github.io/arborealrepository/ctf/blame-game-picoctf-15/</link>
      <pubDate>Mon, 16 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/ctf/blame-game-picoctf-15/</guid>
      <description>Challenge Author: Jeffery John&#xA;Difficulty: Easy&#xA;Description Someone&amp;rsquo;s commits seem to be preventing the program from working. Who is it?&#xA;Process / Notes wget and unzip the files cat the message.py Looks like a half-done print statement git log to see the log It looks like one author is committing &amp;ldquo;important business work&amp;rdquo; an uncountable amount of times, at the same time git branch -a shows only the master branch is there cat a bunch of things - no clues cat HEAD gave a reference location, trying to cat refs/heads/master Got a git code, seems to point to the ee09 branch git checkout to that branch, seems the same.</description>
    </item>
    <item>
      <title>picoCTF Timelines</title>
      <link>https://hedeenza.github.io/arborealrepository/2024/09/16/picoctf-timelines/</link>
      <pubDate>Mon, 16 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/2024/09/16/picoctf-timelines/</guid>
      <description>Decisions After creating the timelines for pwn.college I became interested in what different completion rates would look like for picoCTF as well. For now I&amp;rsquo;ll continue to post 1 challenge per day, but it&amp;rsquo;s not often that I&amp;rsquo;ll only complete one per day. As with pwn.college, it&amp;rsquo;s very likely that &amp;gt; 5 completed per day will not be feasible, but it&amp;rsquo;s interesting to see what very accelerated timelines look like.</description>
    </item>
    <item>
      <title>Bookmarklet (picoCTF 14)</title>
      <link>https://hedeenza.github.io/arborealrepository/ctf/bookmarklet/</link>
      <pubDate>Sun, 15 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/ctf/bookmarklet/</guid>
      <description>Challenge Author: Jeffery John&#xA;Difficulty: Easy&#xA;Description Why search for the flag when I can make a bookmarklet to print it for me?&#xA;Process / Notes Follow the link to the http site There&amp;rsquo;s a JavaScript function with an encrypted flag Viewing the page source There&amp;rsquo;s a line that looks like it responds to copying the code to one&amp;rsquo;s clipboard Tried moving the JavaScript line into the &amp;lt;scirpt&amp;gt;&amp;lt;/scirpt&amp;gt; section and that didn&amp;rsquo;t seem to work At 15 minutes, checking how to do this It looks like you paste the JavaScript into the &amp;ldquo;console&amp;rdquo; part of the Inspector!</description>
    </item>
    <item>
      <title>Enrolling at pwn.college</title>
      <link>https://hedeenza.github.io/arborealrepository/2024/09/15/enrolling-at-pwn-college/</link>
      <pubDate>Sun, 15 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/2024/09/15/enrolling-at-pwn-college/</guid>
      <description>pwn.college &amp;ldquo;pwn.college is an education platform for students (and other interested parties) to learn about, and practice, core cybersecurity concepts in a hands-on fashion. In martial arts terms, it is designed to take a “white belt” in cybersecurity through the journey to becoming a “blue belt”, able to approach (simple) cybersecurity competitions (CTFs) and wargames. Our philosophy is “practice makes perfect”.&#xA;The platform is maintained by an awesome team of hackers at Arizona State University.</description>
    </item>
    <item>
      <title>pwn.college Timelines</title>
      <link>https://hedeenza.github.io/arborealrepository/2024/09/15/pwn-college-timelines/</link>
      <pubDate>Sun, 15 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/2024/09/15/pwn-college-timelines/</guid>
      <description>&#xD;Contemplation Deciding a realistic - but somewhat accelerated - learning rate will be important. I&amp;rsquo;ll need to balance pwn.college learning with Data Camp courses and picoCTF challenges and figure out where my time will be best spent while still making progress on all parts. Creating these tables was great practice with {lubridate} and {dplyr}.&#xA;Level Completion Timeline at Different Learning Rates (Starting from 2024-09-16)&#xD;Level Challenges 1/Day 2/Day 3/Day 4/Day 5/Day White Belt 10 2024-09-26 2024-09-21 2024-09-20 2024-09-19 2024-09-18 Linux Luminarium 84 2024-12-19 2024-11-02 2024-10-18 2024-10-10 2024-10-05 Optional Refreshers 228 2025-08-04 2025-02-24 2025-01-02 2024-12-06 2024-11-20 Orange Belt 124 2025-12-06 2025-04-27 2025-02-13 2025-01-06 2024-12-15 Yellow Belt 110 2026-03-26 2025-06-21 2025-03-22 2025-02-03 2025-01-06 Green Belt 80 2026-06-14 2025-07-31 2025-04-18 2025-02-23 2025-01-22 Blue Belt 173 2026-12-04 2025-10-26 2025-06-15 2025-04-08 2025-02-26 Level Completion Timeline at Different Learning Rates (Starting from 2024-09-16)&#xD;Level Challenges 6/Day 7/Day 8/Day 9/Day 10/Day White Belt 10 2024-09-18 2024-09-18 2024-09-18 2024-09-18 2024-09-17 Linux Luminarium 84 2024-10-02 2024-09-30 2024-09-29 2024-09-28 2024-09-26 Optional Refreshers 228 2024-11-09 2024-11-02 2024-10-28 2024-10-24 2024-10-19 Orange Belt 124 2024-11-30 2024-11-20 2024-11-13 2024-11-07 2024-11-01 Yellow Belt 110 2024-12-19 2024-12-06 2024-11-27 2024-11-20 2024-11-12 Green Belt 80 2025-01-02 2024-12-18 2024-12-07 2024-11-29 2024-11-20 Blue Belt 173 2025-01-31 2025-01-12 2024-12-29 2024-12-19 2024-12-08 </description>
    </item>
    <item>
      <title>endianness (picoCTF 13)</title>
      <link>https://hedeenza.github.io/arborealrepository/ctf/endianness-picoctf-13/</link>
      <pubDate>Sat, 14 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/ctf/endianness-picoctf-13/</guid>
      <description>Challenge Author: NANA AMA ATOMBO-SACKEY&#xA;Difficulty: Easy&#xA;Description Know of little and big endian?&#xA;Process / Notes netcat into the challenge Need to find the little and big endian representations of a word Looks like there&amp;rsquo;s a source file as well - wget that It looks like the program will produce a 5 character word and we&amp;rsquo;ll have to guess the little endian, and the big endian representations of that word in order to receive the flag I know I&amp;rsquo;ve read about endianness before but I can&amp;rsquo;t remember what it is.</description>
    </item>
    <item>
      <title>WebDecode (picoCTF 12)</title>
      <link>https://hedeenza.github.io/arborealrepository/ctf/webdecode-picoctf-12/</link>
      <pubDate>Fri, 13 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/ctf/webdecode-picoctf-12/</guid>
      <description>Challenge Author:&#xA;Difficulty: Easy&#xA;Description Do you know how to use the web inspector?&#xA;Process / Notes Follow the http link that was displayed They said to use the web inspector, so it&amp;rsquo;s time to inspect elements After inspecting the home, about, and contact pages, there doesn&amp;rsquo;t seem to be much of note The only files seem to be this logo and the image of a person In the about page, there&amp;rsquo;s a long, encoded-looking string It doesn&amp;rsquo;t seem to be hex, but it might be a rot13?</description>
    </item>
    <item>
      <title>format string 0 (picoCTF 11)</title>
      <link>https://hedeenza.github.io/arborealrepository/ctf/format-string-0-picoctf-11/</link>
      <pubDate>Thu, 12 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/ctf/format-string-0-picoctf-11/</guid>
      <description>Challenge Author: CHENG ZHANG&#xA;Difficulty: Easy&#xA;Description Can you use your knowledge of format strings to make the customers happy?&#xA;Process / Notes In the source code file, I see that BUFFSIZE 32, FLAGSIZE 64 It looks like we&amp;rsquo;ll first be presented with a menu, then serving Patrick, then serving Sponge Bob With Patrick it looks like choosing the breakfast burger will result in the script returning that that item is unavailable If the item is greater than 2, maybe meaning the third option?</description>
    </item>
    <item>
      <title>picoCTF Challenge Count</title>
      <link>https://hedeenza.github.io/arborealrepository/2024/09/12/picoctf-challenge-count/</link>
      <pubDate>Thu, 12 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/2024/09/12/picoctf-challenge-count/</guid>
      <description>Challenge Count Even though they&amp;rsquo;ve just been the easy challenges so far, I feel like I&amp;rsquo;ve been learning a lot from the picoCTF challenges I&amp;rsquo;ve completed. In the practice section, they have many challenges graded easy, medium, and hard available to complete. At posting one challenge write up each day, getting through the easy challenges will take me to the beginning of November, the medium challenges will take me through mid-May, and the hard challenges will take me to almost the end of July.</description>
    </item>
    <item>
      <title>heap 0 (picoCTF 10)</title>
      <link>https://hedeenza.github.io/arborealrepository/ctf/heap-0-picoctf-10/</link>
      <pubDate>Wed, 11 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/ctf/heap-0-picoctf-10/</guid>
      <description>Challenge Author: ABRXS, PR10R1TYQ&#xA;Difficulty: Easy&#xA;Description Are overflows just a stack concern?&#xA;Process / Notes wget the files I don&amp;rsquo;t know any C, so this is going to be challenging I checked the binary, but didn&amp;rsquo;t find anything that seemed useful. I even tried a hex dump and nothing seemed useful. Played around with the challenge instance, initialized with the net cat command nc Allowed us to see the status of the heap: by pressing 1 Allowed us to write to the heap: by pressing 2 Allowed us to see the &amp;lsquo;safe variable&amp;rsquo; which they gave to use as safe_var = bico: by pressing 3 Allowed us to attempt to retrieve the flag: by pressing 4 Exits: by pressing 5 After poking around a little, I opened up the source code I could see that there was a section at the top that defined the sizes for the flag, input data, and safe variable.</description>
    </item>
    <item>
      <title>Starting with tmux</title>
      <link>https://hedeenza.github.io/arborealrepository/notes/starting-with-tmux/</link>
      <pubDate>Wed, 11 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/notes/starting-with-tmux/</guid>
      <description>What is tmux? Link tmux is a &amp;ldquo;terminal multiplexer&amp;rdquo;, allowing you to have multiple terminal log-ins controlled within one single terminal window. With tmux you don&amp;rsquo;t have to open additional windows or additional tabs to access something else with the terminal while keeping your existing session going.&#xA;Benefits Persistence (You can reconnect after you disconnect) Sharing (multiple people can use the same session) Multiple windows and panes General Commands tmux - Start a tmux session, will display the user, time, program, etc</description>
    </item>
    <item>
      <title>Binary Search (picoCTF 9)</title>
      <link>https://hedeenza.github.io/arborealrepository/ctf/binary-search-picoctf-9/</link>
      <pubDate>Tue, 10 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/ctf/binary-search-picoctf-9/</guid>
      <description>Challenge Author: Jeffery John&#xA;Difficulty: Easy&#xA;Description Want to play a game? As you use more of the shell, you might be interested in how they work! Binary search is a classic algorithm used to quickly find an item in a sorted list. Can you find the flag? You&amp;rsquo;ll have 1000 possibilities and only 10 guesses.&#xA;Cyber security often has a huge amount of data to look through - from logs, vulnerability reports, and forensics.</description>
    </item>
    <item>
      <title>CanYouSee (picoCTF 8)</title>
      <link>https://hedeenza.github.io/arborealrepository/ctf/canyousee-picoctf-8/</link>
      <pubDate>Mon, 09 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/ctf/canyousee-picoctf-8/</guid>
      <description>Challenge Author: Mubarak Mikail&#xA;Difficulty: Easy&#xA;Description How about some hide and seek?&#xA;Process / Notes wget the download zip file, unzip to reveal a jpg file and exiftool on it also show it&amp;rsquo;s a jpg display to view it through ImageMagick shows a dark, celestial room with shadowed figures Checked Hint 1 Tried to hexdump Checked hint 2 I&amp;rsquo;ve got a feeling it&amp;rsquo;s about using a tool or recognizing something I don&amp;rsquo;t know, checking a walk-through at 12:03 The &amp;ldquo;Attribution URL&amp;rdquo; seen in the meta-data is in base64!</description>
    </item>
    <item>
      <title>jq Command Line Tool</title>
      <link>https://hedeenza.github.io/arborealrepository/notes/jq-command-line-tool/</link>
      <pubDate>Mon, 09 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/notes/jq-command-line-tool/</guid>
      <description>Intro jq is a lightweight and flexible command-line JSON processor akin to sed,awk,grep, and friends for JSON data. It&amp;rsquo;s written in portable C and has zero runtime dependencies, allowing you to easily slice, filter, map, and transform structured data. knitr::tufte::quote_footer(&amp;ldquo;From The jq [github page](jq is a lightweight and flexible command-line JSON processor akin to sed,awk,grep, and friends for JSON data. It&amp;rsquo;s written in portable C and has zero runtime dependencies, allowing you to easily slice, filter, map, and transform structured data.</description>
    </item>
    <item>
      <title>Collaborative Development (picoCTF 7)</title>
      <link>https://hedeenza.github.io/arborealrepository/ctf/collaborative-development-picoctf-7/</link>
      <pubDate>Sun, 08 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/ctf/collaborative-development-picoctf-7/</guid>
      <description>Challenge Author: Jeffery John&#xA;Difficulty: Easy&#xA;Description My team has been working very hard on new features for our flag printing program! I wonder how they&amp;rsquo;ll work together?&#xA;Process / Notes wget the zip Another git-based challenge There&amp;rsquo;s a python file (.py) cat on the commitedit message says to add part 3 to the program in refs/heads/feature here seem to be 3 parts git log It looks like we&amp;rsquo;re on the version with just the flag printer.</description>
    </item>
    <item>
      <title>Commitment Issues (picoCTF 6)</title>
      <link>https://hedeenza.github.io/arborealrepository/ctf/commitment-issues-picoctf-6/</link>
      <pubDate>Sat, 07 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/ctf/commitment-issues-picoctf-6/</guid>
      <description>Challenge Author:&#xA;Difficulty: Easy&#xA;Description I accidentally wrote the flag down. Good thing I deleted it!&#xA;Process / Notes A lot of files in a .git folder got unzipped cat on a message reads &amp;ldquo;TOP SECRET&amp;rdquo; Recursively grepping grep -r &#39;pico&#39; .git/* - a few things pop up, looks like it&amp;rsquo;ll be in the log file with the initial commit Using tree to help navigate around cat into the files doesn&amp;rsquo;t seem to help.</description>
    </item>
    <item>
      <title>interrendec (picoCTF 5)</title>
      <link>https://hedeenza.github.io/arborealrepository/ctf/interrendec-picoctf-5/</link>
      <pubDate>Fri, 06 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/ctf/interrendec-picoctf-5/</guid>
      <description>Challenge Author:&#xA;Difficulty: Easy&#xA;Description Can you get the real meaning from this file?&#xA;Process / Notes wget the file file shows its ASCII text The tags on the challenge indicate base64 and Caesar cipher Both cat and strings display the same thing Trying base64 first Looks like we&amp;rsquo;re getting somewhere Using the inbuilt Neo Vim rot13 cipher with g?? That didn&amp;rsquo;t seem to help. What about rot13, then base64? No luck base64 decode nor encode seemed to do anything.</description>
    </item>
    <item>
      <title>Setting Up SSH</title>
      <link>https://hedeenza.github.io/arborealrepository/notes/setting-up-ssh/</link>
      <pubDate>Fri, 06 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/notes/setting-up-ssh/</guid>
      <description>Video by Learn Linux TV Be sure to check out their channel!&#xA;OpenSSH Run commands on a server through the terminal like you were standing right there Most Linux distributions have OpenSSH by default Uses port 22 by default Installation $ which ssh - Check if SSH is already installed&#xA;$ apt search openssh-client - Shows the SSH packaged the SSH utility comes from + will show if it&amp;rsquo;s installed on your device</description>
    </item>
    <item>
      <title>Assign a Specific Python Version to a Virtual Environment</title>
      <link>https://hedeenza.github.io/arborealrepository/notes/assign-a-specific-python-version-to-a-virtual-environment/</link>
      <pubDate>Thu, 05 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/notes/assign-a-specific-python-version-to-a-virtual-environment/</guid>
      <description>Check Python Versions First we need to figure out what versions of python we have. I started with 3.11.&#xA;PS py --list&#xD;Download Python Next we need to download the version of Python we need for our specific project. Once the file is downloaded, follow the installation prompts.&#xA;Check Download After the download is complete, we can check that we have the additional version of Python installed. We should see both versions listed, and a star next to the active version.</description>
    </item>
    <item>
      <title>Civic Data Challenge (Open Data Syracuse pt. 1)</title>
      <link>https://hedeenza.github.io/arborealrepository/projects/civic-data-challenge-open-data-syracuse-pt-1/</link>
      <pubDate>Wed, 04 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/projects/civic-data-challenge-open-data-syracuse-pt-1/</guid>
      <description>The Syracuse Civic Data Challenge from https://data.syr.gov/pages/data-challenge&#xA;&amp;ldquo;Civic Data Challenge is a month-long contest where members of the community get the chance to use datasets from Open Data Syracuse to build an interesting data visualization, website application, data analysis, map, chatbot, or any other type of project that uses the featured dataset.&amp;rdquo;&#xA;Judging Criteria Judging Criteria&#xD;Category Weights Not Known Creativity Execution Wow factor Informational value Data Sources It sounds like we&amp;rsquo;ll need to use one data set from Open Data Syracuse, and any other additional data sets that will help strengthen the project.</description>
    </item>
    <item>
      <title>Secret of the Polyglot (picoCTF 4)</title>
      <link>https://hedeenza.github.io/arborealrepository/ctf/secret-of-the-polyglot-picoctf4/</link>
      <pubDate>Wed, 04 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/ctf/secret-of-the-polyglot-picoctf4/</guid>
      <description>Challenge Author:&#xA;Difficulty: Easy&#xA;Description The Network Operations Center (NOC) of your local institution picked up a suspicious file. They&amp;rsquo;re getting conflicting information on what type of file it is. They&amp;rsquo;ve brought you in as an external expert to examine the file. Can you extract all the information from this strange file?&#xA;Process / Notes Probably going to need to use the file command. Potentially exiftool as well. The file is pdf format, but file reveals that it&amp;rsquo;s a 50x50 png.</description>
    </item>
    <item>
      <title>Super SSH (picoCTF 3)</title>
      <link>https://hedeenza.github.io/arborealrepository/ctf/super-ssh-picoctf-3/</link>
      <pubDate>Wed, 04 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/ctf/super-ssh-picoctf-3/</guid>
      <description>Challenge Author:&#xA;Difficulty: Easy&#xA;Description Using a secure shell (ssh) is going to be pretty important. Additional details will be available after launching your challenge instance.&#xA;Process / Notes Will need to ssh into this one. ssh -p &amp;rsquo;the port number&amp;rsquo; username@destination enter the password It gave me the flag! 3 minutes 52 seconds to complete&#xA;Hints None used Core Lessons Understanding how to SSH into a specific port with a specific username at a desired target is a core skill.</description>
    </item>
    <item>
      <title>Scan Surprise (picoCTF 2)</title>
      <link>https://hedeenza.github.io/arborealrepository/ctf/scan-surprise-picoctf-2/</link>
      <pubDate>Tue, 03 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/ctf/scan-surprise-picoctf-2/</guid>
      <description>Challenge Author: Jeffery John&#xA;Description I&amp;rsquo;ve gotten bored of handing out flags as text. Wouldn&amp;rsquo;t it be cool if they were an image instead?&#xA;Process / Notes Download the zipped file and unzip. file on the file reveals it&amp;rsquo;s a small image. Opening the file shows it&amp;rsquo;s a QR code. Without a phone, the hint about using zbar tools led me to try to figure out what those were. Acquiring zbar tools with sudo apt install zbar-tools Using zbar-tools directly didn&amp;rsquo;t work.</description>
    </item>
    <item>
      <title>Verify (picoCTF 1)</title>
      <link>https://hedeenza.github.io/arborealrepository/ctf/verify-picoctf-1/</link>
      <pubDate>Mon, 02 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/ctf/verify-picoctf-1/</guid>
      <description>Challenge Author: Jeffery John&#xA;Description &amp;ldquo;People keep trying to trick my players with imitation flags. I want to make sure they get the real thing! I&amp;rsquo;m going to provide the SHA-256 has and a decrypt script to help you know that my flags are legitimate.&amp;rdquo;&#xA;Process / Notes Downloading the file with wget &amp;lt;link&amp;gt; Unzip the download with unzip &amp;lt;download&amp;gt; Saw that a lot of files got unzipped, originating in the files directory cd into the drop-in directory cat checksum.</description>
    </item>
    <item>
      <title>Capture the Flag - Intro</title>
      <link>https://hedeenza.github.io/arborealrepository/ctf/capture-the-flag-intro/</link>
      <pubDate>Sun, 01 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/ctf/capture-the-flag-intro/</guid>
      <description>Introduction Capture the Flag is a means of teaching cybersecurity principles through practical games. Players either try to find flags (often text strings) either held by the event host or other teams using various tools and techniques in order to win. (source Wikipedia)&#xA;The game originated at DEF CON, but after learning that there are a few online platforms to play and learn, I thought it would be fun to try it out.</description>
    </item>
    <item>
      <title>Installing PyTorch</title>
      <link>https://hedeenza.github.io/arborealrepository/2024/08/29/installing-pytorch/</link>
      <pubDate>Thu, 29 Aug 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/2024/08/29/installing-pytorch/</guid>
      <description>Introduction I looked into working with PyTorch because it appears I&amp;rsquo;ll be running some machine-learning type projects in the near future, and PyTorch is a way to run that within Python - another area I&amp;rsquo;m actively expanding my skills. My hardware isn&amp;rsquo;t the strongest, so it was a question about whether I&amp;rsquo;d even meet the system requirements going in.&#xA;What is PyTorch? From their github page:&#xA;&amp;quot;PyTorch is a Python package that provides two high-level features: - Tensor computation (like NumPy) with strong GPU acceleration - Deep neural networks built on a tape-based autograd system You can reuse your favorite Python packages such as NumPy, SciPy, and Cython to extend PyTorch when needed.</description>
    </item>
    <item>
      <title>Korean Ground Beef</title>
      <link>https://hedeenza.github.io/arborealrepository/recipes/korean-ground-beef/</link>
      <pubDate>Thu, 29 Aug 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/recipes/korean-ground-beef/</guid>
      <description>by Unknown&#xA;Ingredients Yields ~4 servings (or 1 very hungry person)&#xD;Ingredient Amount Lean Ground Beef 1 lb / 454 g Brown Sugar 1/2 Cup Sesame Oil 1 tsp Soy Sauce 1/2 Cup Minced Garlic 3 cloves Sriracha 1 tsp Fresh, Minced Ginger 1 tsp Green Onions 2 Preparation ~20 minutes&#xA;Heat a large pan over medium - high heat.&#xA;Brown meat with sesame oil, garlic, and ginger.&#xA;Drain 75% of the fat, add in the brown sugar, soy sauce, and sriracha.</description>
    </item>
    <item>
      <title>Learning Neovim (pt. 2)</title>
      <link>https://hedeenza.github.io/arborealrepository/notes/learning-neovim-pt-2/</link>
      <pubDate>Thu, 29 Aug 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/notes/learning-neovim-pt-2/</guid>
      <description>Version Troubles I&amp;rsquo;ve been playing around with Neo Vim a lot more than I&amp;rsquo;ve been writing about it. It&amp;rsquo;s been 19 days since I first got trapped and despite that short time, I feel quite comfortable using the tool. There is certainly a ton of learning still to go before I&amp;rsquo;ll be able to zoom around and manipulate code at the speed of thought, but progress is progress.&#xA;The version that the Windows Subsystem for Linux installs is v0.</description>
    </item>
    <item>
      <title>Neo Vim with ThePrimeagen (Neo Vim pt. 3)</title>
      <link>https://hedeenza.github.io/arborealrepository/notes/neo-vim-with-theprimeagen-pt-3/</link>
      <pubDate>Thu, 29 Aug 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/notes/neo-vim-with-theprimeagen-pt-3/</guid>
      <description>Neo Vim Lesson Series Looking up all the Vim content on YouTube told the algorithm to send me some more. I stumbled upon a series by the creator ThePrimeagen that details more commands in Vim and Neo Vim. I&amp;rsquo;ll do my best to only add here what hasn&amp;rsquo;t been covered already. But if you&amp;rsquo;re interested, here&amp;rsquo;s the link to the full playlist.&#xA;Introduction (#1) This covers a lot of the basics that the Vim :Tutor does.</description>
    </item>
    <item>
      <title>Pizza Dough</title>
      <link>https://hedeenza.github.io/arborealrepository/recipes/pizza-dought/</link>
      <pubDate>Sat, 17 Aug 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/recipes/pizza-dought/</guid>
      <description>by B&#xA;Ingredients Yields 1 batch&#xD;Ingredient Amount Warm Water 325 - 340 g Sugar 1 tsp Yeast 2 1/4 tsp OR 1 package All Purpose Flour OR Bread Flour 500 g Olive Oil 1 Tbsp + for coating Salt 1 tsp Preparation Combine the water, sugar, and yeast in a small bowl.&#xA;Place the flour into a bowl, and add the salt along with the olive oil.&#xA;Add the yeast mixture and mix/knead with until you have a stretchy dough.</description>
    </item>
    <item>
      <title>Critical Role: The Almost Impossible (Campaign 1 - Vox Machina)</title>
      <link>https://hedeenza.github.io/arborealrepository/projects/critical-role-the-almost-impossible-campaign-1/</link>
      <pubDate>Wed, 14 Aug 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/projects/critical-role-the-almost-impossible-campaign-1/</guid>
      <description>This is a repost of a previous project originally from 15 June 2024.&#xA;1. Introduction Critical Role is a series in which a star-studded cast of Hollywood voice actors play Dungeons &amp;amp; Dragons. It&amp;rsquo;s a story known for its length (and you thought catching up on the Marvel Cinematic Universe was bad):&#xA;Critical Role Run Time in Context&#xD;Campaign Start Date End Date Play Time # of 45&#39; Cable TV Episodes 1 - Vox Machina March 2015 October 2017 373 hours 23 minutes 497.</description>
    </item>
    <item>
      <title>Rower Hometown Map - pt.1</title>
      <link>https://hedeenza.github.io/arborealrepository/projects/rower-hometown-map-pt-1/</link>
      <pubDate>Wed, 14 Aug 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/projects/rower-hometown-map-pt-1/</guid>
      <description>Introduction An important part of building a continually successful rowing team - or any team with turnover for that matter - is strategic recruitment. If you don&amp;rsquo;t have high quality people coming in as your previous high quality people leave, you&amp;rsquo;re going to be in a tough spot. Many Division 1 teams in the United States recruit from all across the country and internationally to find the talent that will help their team continue their storied legacy of excellence.</description>
    </item>
    <item>
      <title>Bao Dough</title>
      <link>https://hedeenza.github.io/arborealrepository/recipes/bao-dough/</link>
      <pubDate>Tue, 13 Aug 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/recipes/bao-dough/</guid>
      <description>by B&#xA;Ingredients Yields 1 batch&#xD;Ingredient Amount Water ~Body Temperature 236 g Yeast 6 g Flour 381 g Cornstarch 78 g Sugar 70 g Salt 12 g Pork fat OR Butter 2 Tbsp Preparation Add yeast to the water - let stand until foamy.&#xA;Mix flour, cornstarch, sugar, and salt in the stand mixer bowl.&#xA;Add the water mixture and mix until a cohesive ball forms.&#xA;Once the ball is formed, add the pork fat a little bit at a time until it is all added.</description>
    </item>
    <item>
      <title>Chinese BBQ Pork</title>
      <link>https://hedeenza.github.io/arborealrepository/recipes/chinese-bbq-pork/</link>
      <pubDate>Tue, 13 Aug 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/recipes/chinese-bbq-pork/</guid>
      <description>by B&#xA;Ingredients Yields ~1-3 lbs&#xD;Ingredient Amount Pork shoulder, cut into slabs 1-3 lbs Brown Sugar 3 Tbsp Honey 3 Tbsp Chinese 5-Spice 1.5 tsp Shaoxing Rice Wine 2 Tbsp Soy Sauce 1 Tbsp Hoisin Sauce 2 Tbsp (+1 if no Bean Curd) Red or Black Bean Curd 1 Tbsp Sesame Oil 1 Tbsp Salt 2 Tbsp Preparation Mix brown sugar, 5-spice, shaoxing rice wine, soy sauce, hoisin sauce, bean curd, sesame oil, and sea salt together in a bowl.</description>
    </item>
    <item>
      <title>Zaatar Bread</title>
      <link>https://hedeenza.github.io/arborealrepository/recipes/zaatar-bread/</link>
      <pubDate>Tue, 13 Aug 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/recipes/zaatar-bread/</guid>
      <description>by Fresh Corner Market (University of Oregon)&#xA;Ingredients 4 Tbsp Zaatar Spice Blend&#xD;Ingredient Amount Thyme to taste (?) Toasted Sesame Seeds to taste (?) Sumac to taste (?) Coarse Salt to taste (?) Assembly&#xD;Ingredient Amount Small Naan Bread 40 Olive Oil 1/4 Cup Toasted Sesame Seeds 1/2 Cup Preparation Mix your zaatar blend.&#xA;Brush naan with olive oil and sprinkle generously with zaatar bread.&#xA;Sprinkle toasted sesame seeds on the bread.</description>
    </item>
    <item>
      <title>Future Projects</title>
      <link>https://hedeenza.github.io/arborealrepository/future/</link>
      <pubDate>Mon, 12 Aug 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/future/</guid>
      <description>Future Projects Textual Analysis of a Novel Art generated from the word cloud Twitter Data Pipeline Creation SQLite, SQL and R, Creation Machine Learning in R Rower Hometown Interactive Map State Senator Hometown Map Future Posts Free CCNA Networking Course Notes ffmpeg Notes Learn C Learn Rust? (fast, secure) Learning Statistics with R notes R for Data Science 2e notes Tidy Modeling with R notes Text Mining with R notes Supervised Machine Learning for Text Analysis with R notes A Practical Approach for Predictive Models notes Coursera course notes </description>
    </item>
    <item>
      <title>Learning Neovim (pt. 1)</title>
      <link>https://hedeenza.github.io/arborealrepository/notes/learning-neovim/</link>
      <pubDate>Sat, 10 Aug 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/notes/learning-neovim/</guid>
      <description>Sidestepping the Roadblock&amp;hellip; While attempting to work through Git BASH yesterday to get this site set up, I got Trapped in Vim™, which is apparently a very normal experience for beginners:&#xA;After trying what felt like everything that made sense and caving in to my impatience in the moment, I closed the window and learned how to change the default editor in Git Bash and set it to nano:&#xA;git config --global core.</description>
    </item>
    <item>
      <title>Fig Balsamic Dressing</title>
      <link>https://hedeenza.github.io/arborealrepository/recipes/fig-balsamic-dressing/</link>
      <pubDate>Fri, 09 Aug 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/recipes/fig-balsamic-dressing/</guid>
      <description>by Fresh Corner Market (University of Oregon)&#xA;Ingredients Yields 2 Cups&#xD;Ingredient Amount Soaked Black Mission Figs 10 Balsamic Vinegar 1/3 Cup Olive Oil 1 Cup Black Pepper 1/2 tsp Salt 1 tsp Lemon Juice 1 tsp Dijon Mustard 1 Tbsp Preparation Pre-soak Black Mission Figs in 1 cup of water for 2 hours, then reserve the water for later.&#xA;Blend all ingredients until smooth, starting slow and adding reserved water if necessary.</description>
    </item>
    <item>
      <title>New live test</title>
      <link>https://hedeenza.github.io/arborealrepository/2024/08/09/new-live-test/</link>
      <pubDate>Fri, 09 Aug 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/2024/08/09/new-live-test/</guid>
      <description>We made it! If you&amp;rsquo;re reading this, it means that the site is live. As a beginner with {blogdown}, I ran into many challenges that will likely give my later self a good laugh. Adding the .nojekyll file and adding the &amp;ldquo;publishDir: docs&amp;rdquo; line to the config.yaml seem to have done the trick in getting this live.&#xA;Now that it&amp;rsquo;s live, I need to test updating the content. My first attempt will be the following steps:</description>
    </item>
    <item>
      <title>SQL: Zero to Advanced pt. 1</title>
      <link>https://hedeenza.github.io/arborealrepository/notes/sql-zero-to-advanced-pt-1/</link>
      <pubDate>Fri, 09 Aug 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/notes/sql-zero-to-advanced-pt-1/</guid>
      <description>materials by Bosscoder Academy, found on LinkedIn&#xA;Format The materials are sorted into 24 &amp;ldquo;days&amp;rdquo; of learning, each with a central theme. My goal is to break them into 3 posts, 8 &amp;ldquo;days&amp;rdquo; each, with a distillation of the already brief material in each section as a review of SQL.&#xA;1. Introduction to SQL and Relational Databases 1.1 Content SELECT -&#xA;INSERT -&#xA;UPDATE -&#xA;DELETE -&#xA;1.2 Practice Questions Question Answer Write a SQL query to insert a new record into the &#34;</description>
    </item>
    <item>
      <title>About</title>
      <link>https://hedeenza.github.io/arborealrepository/about/</link>
      <pubDate>Thu, 08 Aug 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/about/</guid>
      <description>Recent Realizations At the time of writing I&amp;rsquo;m only a little more than 4 months into my all-consuming focus on coding, but I&amp;rsquo;m learning a lot quickly. I started my learning acceleration with a one-day, six-hour workshop with the University of Oregon data services department covering basic R in late March. The skills I learned in that workshop served as the foundation for the more powerful data processing that further amplified my primary career.</description>
    </item>
    <item>
      <title>&#34;The Arboreal Repository&#34;</title>
      <link>https://hedeenza.github.io/arborealrepository/2024/07/23/the-arboreal-repository/</link>
      <pubDate>Tue, 23 Jul 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/2024/07/23/the-arboreal-repository/</guid>
      <description>Recent Realizations At the time of writing I&amp;rsquo;m only a little more than 4 months into my all-consuming focus on coding, but I&amp;rsquo;m learning a lot quickly. I started my learning acceleration with a one-day, six-hour workshop with the University of Oregon data services department covering basic R in late March. The skills I learned in that workshop served as the foundation for the more powerful data processing that further amplified my primary career.</description>
    </item>
    <item>
      <title>CSS: Break It to Learn It - Day 1</title>
      <link>https://hedeenza.github.io/arborealrepository/2024/07/23/css-break-it-to-learn-it-day-1/</link>
      <pubDate>Tue, 23 Jul 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/2024/07/23/css-break-it-to-learn-it-day-1/</guid>
      <description>Building a Blogdown Site Learning by Breaking </description>
    </item>
    <item>
      <title>project test </title>
      <link>https://hedeenza.github.io/arborealrepository/projects/project-test/</link>
      <pubDate>Tue, 23 Jul 2024 00:00:00 +0000</pubDate>
      <guid>https://hedeenza.github.io/arborealrepository/projects/project-test/</guid>
      <description></description>
    </item>
  </channel>
</rss>
